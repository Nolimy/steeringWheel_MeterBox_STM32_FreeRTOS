<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [stm32F407zet6\stm32F407zet6.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image stm32F407zet6\stm32F407zet6.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Sun Jan 15 17:15:40 2023
<BR><P>
<H3>Maximum Stack Usage =       1480 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
lv_slider_event &rArr; lv_bar_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[158]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[247]">lv_obj_redraw</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248]">refr_obj</a><BR>
 <LI><a href="#[18f]">event_send_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f]">event_send_core</a><BR>
 <LI><a href="#[245]">lv_obj_transform_point</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[245]">lv_obj_transform_point</a><BR>
 <LI><a href="#[252]">lv_refr_get_top_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[252]">lv_refr_get_top_obj</a><BR>
 <LI><a href="#[24a]">refresh_children_style</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24a]">refresh_children_style</a><BR>
 <LI><a href="#[1b9]">lv_obj_move_children_by</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b9]">lv_obj_move_children_by</a><BR>
 <LI><a href="#[249]">lv_obj_scroll_by_bounded</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[199]">layout_update_core</a><BR>
 <LI><a href="#[199]">layout_update_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[199]">layout_update_core</a><BR>
 <LI><a href="#[1ac]">_vsnprintf</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ac]">_vsnprintf</a><BR>
 <LI><a href="#[23a]">lv_obj_construct</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23a]">lv_obj_construct</a><BR>
 <LI><a href="#[1ad]">apply_theme</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ad]">apply_theme</a><BR>
 <LI><a href="#[23c]">obj_del_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23c]">obj_del_core</a><BR>
 <LI><a href="#[262]">report_style_change_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[262]">report_style_change_core</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-6a46d2.o(.text.BusFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from lto-llvm-6a46d2.o(.text.CAN1_RX0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from lto-llvm-6a46d2.o(.text.DMA2_Stream1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-6a46d2.o(.text.DebugMon_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[59]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-6a46d2.o(.text.HardFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-6a46d2.o(.text.MemManage_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-6a46d2.o(.text.NMI_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-6a46d2.o(.text.PendSV_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-6a46d2.o(.text.SVC_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b5]">Start_IotUploadTask</a> from lto-llvm-6a46d2.o(.text.Start_IotUploadTask) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[b8]">Start_LVGL_Lap_Timer</a> from lto-llvm-6a46d2.o(.text.Start_LVGL_Lap_Timer) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[b7]">Start_LVGL_Meter</a> from lto-llvm-6a46d2.o(.text.Start_LVGL_Meter) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[b6]">Start_LVGL_Task</a> from lto-llvm-6a46d2.o(.text.Start_LVGL_Task) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[9]">SysTick_Handler</a> from lto-llvm-6a46d2.o(.text.SysTick_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from lto-llvm-6a46d2.o(.text.SystemInit) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from lto-llvm-6a46d2.o(.text.TIM2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from lto-llvm-6a46d2.o(.text.TIM3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[62]">UART_DMAAbortOnError</a> from lto-llvm-6a46d2.o(.text.UART_DMAAbortOnError) referenced 2 times from lto-llvm-6a46d2.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-6a46d2.o(.text.USART1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from lto-llvm-6a46d2.o(.text.USART3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-6a46d2.o(.text.UsageFault_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5c]">__main</a> from __main.o(!!!main) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[60]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[aa]">_lv_disp_refr_timer</a> from lto-llvm-6a46d2.o(.text._lv_disp_refr_timer) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[8d]">_lv_ll_get_head</a> from lto-llvm-6a46d2.o(.text._lv_ll_get_head) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_destructor)
 <LI><a href="#[8e]">_lv_ll_get_next</a> from lto-llvm-6a46d2.o(.text._lv_ll_get_next) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_destructor)
 <LI><a href="#[90]">_lv_ll_get_prev</a> from lto-llvm-6a46d2.o(.text._lv_ll_get_prev) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_destructor)
 <LI><a href="#[8f]">_lv_ll_get_tail</a> from lto-llvm-6a46d2.o(.text._lv_ll_get_tail) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_destructor)
 <LI><a href="#[8a]">_out_buffer</a> from lto-llvm-6a46d2.o(.text._out_buffer) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_label_set_text_fmt)
 <LI><a href="#[8a]">_out_buffer</a> from lto-llvm-6a46d2.o(.text._out_buffer) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_snprintf)
 <LI><a href="#[65]">_out_null</a> from lto-llvm-6a46d2.o(.text._out_null) referenced 2 times from lto-llvm-6a46d2.o(.text._vsnprintf)
 <LI><a href="#[5e]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[5d]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[a9]">anim_timer</a> from lto-llvm-6a46d2.o(.text.anim_timer) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[9d]">arc_anim_end_angle</a> from lto-llvm-6a46d2.o(.text.arc_anim_end_angle) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
 <LI><a href="#[9f]">arc_anim_start_angle</a> from lto-llvm-6a46d2.o(.text.arc_anim_start_angle) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
 <LI><a href="#[a2]">btns_value_changed_event_cb</a> from lto-llvm-6a46d2.o(.text.btns_value_changed_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_tabview_constructor)
 <LI><a href="#[c5]">color_blend_true_color_additive</a> from lto-llvm-6a46d2.o(.text.color_blend_true_color_additive) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[c7]">color_blend_true_color_multiply</a> from lto-llvm-6a46d2.o(.text.color_blend_true_color_multiply) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[c6]">color_blend_true_color_subtractive</a> from lto-llvm-6a46d2.o(.text.color_blend_true_color_subtractive) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[a3]">cont_scroll_end_event_cb</a> from lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_tabview_constructor)
 <LI><a href="#[6e]">cursor_blink_anim_cb</a> from lto-llvm-6a46d2.o(.text.cursor_blink_anim_cb) referenced 4 times from lto-llvm-6a46d2.o(.text.label_event_cb)
 <LI><a href="#[6e]">cursor_blink_anim_cb</a> from lto-llvm-6a46d2.o(.text.cursor_blink_anim_cb) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
 <LI><a href="#[6e]">cursor_blink_anim_cb</a> from lto-llvm-6a46d2.o(.text.cursor_blink_anim_cb) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_textarea_event)
 <LI><a href="#[6e]">cursor_blink_anim_cb</a> from lto-llvm-6a46d2.o(.text.cursor_blink_anim_cb) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
 <LI><a href="#[c2]">dark_color_filter_cb</a> from lto-llvm-6a46d2.o(.text.dark_color_filter_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.style_init)
 <LI><a href="#[a8]">disp_flush</a> from lto-llvm-6a46d2.o(.text.disp_flush) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[74]">draw_part_begin_event_cb</a> from lto-llvm-6a46d2.o(.text.draw_part_begin_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_calendar_constructor)
 <LI><a href="#[af]">flex_update</a> from lto-llvm-6a46d2.o(.text.flex_update) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[5f]">fputc</a> from lto-llvm-6a46d2.o(.text.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[c3]">grey_filter_cb</a> from lto-llvm-6a46d2.o(.text.grey_filter_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.style_init)
 <LI><a href="#[b0]">grid_update</a> from lto-llvm-6a46d2.o(.text.grid_update) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[b4]">iotStatusUpdate</a> from lto-llvm-6a46d2.o(.text.iotStatusUpdate) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[a4]">label_event_cb</a> from lto-llvm-6a46d2.o(.text.label_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
 <LI><a href="#[c4]">lapTimer_cb</a> from lto-llvm-6a46d2.o(.text.lapTimer_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.ui_event_startup)
 <LI><a href="#[9e]">lv_anim_path_ease_in_out</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_ease_in_out) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
 <LI><a href="#[92]">lv_anim_path_ease_out</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_ease_out) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
 <LI><a href="#[92]">lv_anim_path_ease_out</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_ease_out) referenced 2 times from lto-llvm-6a46d2.o(.text.refr_position)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.Start_LVGL_Meter)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_anim_init)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_value)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_label_refr_text)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_switch_event)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.style_init)
 <LI><a href="#[63]">lv_anim_path_linear</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_linear) referenced 2 times from lto-llvm-6a46d2.o(.text.ui_speedMeter_update)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.label_event_cb)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_event)
 <LI><a href="#[6f]">lv_anim_path_step</a> from lto-llvm-6a46d2.o(.text.lv_anim_path_step) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
 <LI><a href="#[e5]">lv_arc_constructor</a> from lto-llvm-6a46d2.o(.text.lv_arc_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e6]">lv_arc_event</a> from lto-llvm-6a46d2.o(.text.lv_arc_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[69]">lv_area_get_height</a> from lto-llvm-6a46d2.o(.text.lv_area_get_height) referenced 2 times from lto-llvm-6a46d2.o(.text.children_repos)
 <LI><a href="#[71]">lv_area_get_height.993</a> from lto-llvm-6a46d2.o(.text.lv_area_get_height.993) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_bar_event)
 <LI><a href="#[68]">lv_area_get_width</a> from lto-llvm-6a46d2.o(.text.lv_area_get_width) referenced 2 times from lto-llvm-6a46d2.o(.text.children_repos)
 <LI><a href="#[70]">lv_area_get_width.992</a> from lto-llvm-6a46d2.o(.text.lv_area_get_width.992) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_bar_event)
 <LI><a href="#[66]">lv_area_set_height</a> from lto-llvm-6a46d2.o(.text.lv_area_set_height) referenced 2 times from lto-llvm-6a46d2.o(.text.children_repos)
 <LI><a href="#[67]">lv_area_set_width</a> from lto-llvm-6a46d2.o(.text.lv_area_set_width) referenced 2 times from lto-llvm-6a46d2.o(.text.children_repos)
 <LI><a href="#[72]">lv_bar_anim</a> from lto-llvm-6a46d2.o(.text.lv_bar_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
 <LI><a href="#[72]">lv_bar_anim</a> from lto-llvm-6a46d2.o(.text.lv_bar_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_value)
 <LI><a href="#[73]">lv_bar_anim_ready</a> from lto-llvm-6a46d2.o(.text.lv_bar_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
 <LI><a href="#[73]">lv_bar_anim_ready</a> from lto-llvm-6a46d2.o(.text.lv_bar_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_bar_set_value)
 <LI><a href="#[ff]">lv_bar_constructor</a> from lto-llvm-6a46d2.o(.text.lv_bar_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[100]">lv_bar_destructor</a> from lto-llvm-6a46d2.o(.text.lv_bar_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[101]">lv_bar_event</a> from lto-llvm-6a46d2.o(.text.lv_bar_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e7]">lv_btn_constructor</a> from lto-llvm-6a46d2.o(.text.lv_btn_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e8]">lv_btnmatrix_constructor</a> from lto-llvm-6a46d2.o(.text.lv_btnmatrix_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e9]">lv_btnmatrix_destructor</a> from lto-llvm-6a46d2.o(.text.lv_btnmatrix_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ea]">lv_btnmatrix_event</a> from lto-llvm-6a46d2.o(.text.lv_btnmatrix_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[c9]">lv_calendar_constructor</a> from lto-llvm-6a46d2.o(.text.lv_calendar_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[cb]">lv_chart_constructor</a> from lto-llvm-6a46d2.o(.text.lv_chart_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[cc]">lv_chart_destructor</a> from lto-llvm-6a46d2.o(.text.lv_chart_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[cd]">lv_chart_event</a> from lto-llvm-6a46d2.o(.text.lv_chart_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[eb]">lv_checkbox_constructor</a> from lto-llvm-6a46d2.o(.text.lv_checkbox_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ec]">lv_checkbox_destructor</a> from lto-llvm-6a46d2.o(.text.lv_checkbox_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ed]">lv_checkbox_event</a> from lto-llvm-6a46d2.o(.text.lv_checkbox_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ce]">lv_colorwheel_constructor</a> from lto-llvm-6a46d2.o(.text.lv_colorwheel_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[cf]">lv_colorwheel_event</a> from lto-llvm-6a46d2.o(.text.lv_colorwheel_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[77]">lv_draw_mask_angle</a> from lto-llvm-6a46d2.o(.text.lv_draw_mask_angle) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_arc)
 <LI><a href="#[75]">lv_draw_mask_line</a> from lto-llvm-6a46d2.o(.text.lv_draw_mask_line) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_mask_line_points_init)
 <LI><a href="#[76]">lv_draw_mask_radius</a> from lto-llvm-6a46d2.o(.text.lv_draw_mask_radius) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_mask_radius_init)
 <LI><a href="#[78]">lv_draw_sw_arc</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_arc) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7e]">lv_draw_sw_bg</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_bg) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[84]">lv_draw_sw_blend_basic</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_blend_basic) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[82]">lv_draw_sw_buffer_copy</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_buffer_copy) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7b]">lv_draw_sw_img_decoded</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_img_decoded) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[a7]">lv_draw_sw_init_ctx</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[83]">lv_draw_sw_layer_adjust</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_adjust) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[85]">lv_draw_sw_layer_blend</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_blend) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[80]">lv_draw_sw_layer_create</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_create) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[86]">lv_draw_sw_layer_destroy</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_destroy) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7a]">lv_draw_sw_letter</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_letter) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7c]">lv_draw_sw_line</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_line) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7d]">lv_draw_sw_polygon</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_polygon) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[79]">lv_draw_sw_rect</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_rect) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[7f]">lv_draw_sw_transform</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_transform) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[81]">lv_draw_sw_wait_for_finish</a> from lto-llvm-6a46d2.o(.text.lv_draw_sw_wait_for_finish) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
 <LI><a href="#[ee]">lv_dropdown_constructor</a> from lto-llvm-6a46d2.o(.text.lv_dropdown_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ef]">lv_dropdown_destructor</a> from lto-llvm-6a46d2.o(.text.lv_dropdown_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f0]">lv_dropdown_event</a> from lto-llvm-6a46d2.o(.text.lv_dropdown_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f3]">lv_dropdown_list_event</a> from lto-llvm-6a46d2.o(.text.lv_dropdown_list_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f1]">lv_dropdownlist_constructor</a> from lto-llvm-6a46d2.o(.text.lv_dropdownlist_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f2]">lv_dropdownlist_destructor</a> from lto-llvm-6a46d2.o(.text.lv_dropdownlist_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[111]">lv_font_get_bitmap_fmt_txt</a> from lto-llvm-6a46d2.o(.text.lv_font_get_bitmap_fmt_txt) referenced 7 times from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[110]">lv_font_get_glyph_dsc_fmt_txt</a> from lto-llvm-6a46d2.o(.text.lv_font_get_glyph_dsc_fmt_txt) referenced 7 times from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f4]">lv_img_constructor</a> from lto-llvm-6a46d2.o(.text.lv_img_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ae]">lv_img_decoder_built_in_close</a> from lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_close) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[ab]">lv_img_decoder_built_in_info</a> from lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_info) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[ac]">lv_img_decoder_built_in_open</a> from lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_open) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[ad]">lv_img_decoder_built_in_read_line</a> from lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_read_line) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[f5]">lv_img_destructor</a> from lto-llvm-6a46d2.o(.text.lv_img_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f6]">lv_img_event</a> from lto-llvm-6a46d2.o(.text.lv_img_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e4]">lv_keyboard_constructor</a> from lto-llvm-6a46d2.o(.text.lv_keyboard_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[87]">lv_keyboard_def_event_cb</a> from lto-llvm-6a46d2.o(.text.lv_keyboard_def_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_keyboard_constructor)
 <LI><a href="#[fb]">lv_label_constructor</a> from lto-llvm-6a46d2.o(.text.lv_label_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[fc]">lv_label_destructor</a> from lto-llvm-6a46d2.o(.text.lv_label_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[fd]">lv_label_event</a> from lto-llvm-6a46d2.o(.text.lv_label_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d0]">lv_led_constructor</a> from lto-llvm-6a46d2.o(.text.lv_led_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d1]">lv_led_event</a> from lto-llvm-6a46d2.o(.text.lv_led_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f7]">lv_line_constructor</a> from lto-llvm-6a46d2.o(.text.lv_line_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[f8]">lv_line_event</a> from lto-llvm-6a46d2.o(.text.lv_line_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[8b]">lv_menu_back_event_cb</a> from lto-llvm-6a46d2.o(.text.lv_menu_back_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_menu_constructor)
 <LI><a href="#[d2]">lv_menu_constructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d6]">lv_menu_cont_constructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_cont_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d3]">lv_menu_destructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d4]">lv_menu_page_constructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_page_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d5]">lv_menu_page_destructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_page_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d7]">lv_menu_section_constructor</a> from lto-llvm-6a46d2.o(.text.lv_menu_section_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[8c]">lv_menu_value_changed_event_cb</a> from lto-llvm-6a46d2.o(.text.lv_menu_value_changed_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_menu_constructor)
 <LI><a href="#[d8]">lv_meter_constructor</a> from lto-llvm-6a46d2.o(.text.lv_meter_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[d9]">lv_meter_destructor</a> from lto-llvm-6a46d2.o(.text.lv_meter_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[da]">lv_meter_event</a> from lto-llvm-6a46d2.o(.text.lv_meter_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10a]">lv_obj_constructor</a> from lto-llvm-6a46d2.o(.text.lv_obj_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10b]">lv_obj_destructor</a> from lto-llvm-6a46d2.o(.text.lv_obj_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10c]">lv_obj_event</a> from lto-llvm-6a46d2.o(.text.lv_obj_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[6d]">lv_obj_get_height</a> from lto-llvm-6a46d2.o(.text.lv_obj_get_height) referenced 2 times from lto-llvm-6a46d2.o(.text.find_track_end)
 <LI><a href="#[6c]">lv_obj_get_width</a> from lto-llvm-6a46d2.o(.text.lv_obj_get_width) referenced 2 times from lto-llvm-6a46d2.o(.text.find_track_end)
 <LI><a href="#[f9]">lv_roller_constructor</a> from lto-llvm-6a46d2.o(.text.lv_roller_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[fa]">lv_roller_event</a> from lto-llvm-6a46d2.o(.text.lv_roller_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[fe]">lv_roller_label_event</a> from lto-llvm-6a46d2.o(.text.lv_roller_label_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[102]">lv_slider_constructor</a> from lto-llvm-6a46d2.o(.text.lv_slider_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[103]">lv_slider_event</a> from lto-llvm-6a46d2.o(.text.lv_slider_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[db]">lv_spinbox_constructor</a> from lto-llvm-6a46d2.o(.text.lv_spinbox_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[dc]">lv_spinbox_event</a> from lto-llvm-6a46d2.o(.text.lv_spinbox_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[dd]">lv_spinner_constructor</a> from lto-llvm-6a46d2.o(.text.lv_spinner_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[a0]">lv_switch_anim_exec_cb</a> from lto-llvm-6a46d2.o(.text.lv_switch_anim_exec_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_switch_event)
 <LI><a href="#[a1]">lv_switch_anim_ready</a> from lto-llvm-6a46d2.o(.text.lv_switch_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_switch_event)
 <LI><a href="#[104]">lv_switch_constructor</a> from lto-llvm-6a46d2.o(.text.lv_switch_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[105]">lv_switch_destructor</a> from lto-llvm-6a46d2.o(.text.lv_switch_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[106]">lv_switch_event</a> from lto-llvm-6a46d2.o(.text.lv_switch_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[107]">lv_table_constructor</a> from lto-llvm-6a46d2.o(.text.lv_table_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[108]">lv_table_destructor</a> from lto-llvm-6a46d2.o(.text.lv_table_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[109]">lv_table_event</a> from lto-llvm-6a46d2.o(.text.lv_table_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[de]">lv_tabview_constructor</a> from lto-llvm-6a46d2.o(.text.lv_tabview_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[df]">lv_tabview_destructor</a> from lto-llvm-6a46d2.o(.text.lv_tabview_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e0]">lv_tabview_event</a> from lto-llvm-6a46d2.o(.text.lv_tabview_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10d]">lv_textarea_constructor</a> from lto-llvm-6a46d2.o(.text.lv_textarea_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10e]">lv_textarea_destructor</a> from lto-llvm-6a46d2.o(.text.lv_textarea_destructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[10f]">lv_textarea_event</a> from lto-llvm-6a46d2.o(.text.lv_textarea_event) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e1]">lv_tileview_constructor</a> from lto-llvm-6a46d2.o(.text.lv_tileview_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e2]">lv_tileview_tile_constructor</a> from lto-llvm-6a46d2.o(.text.lv_tileview_tile_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[e3]">lv_win_constructor</a> from lto-llvm-6a46d2.o(.text.lv_win_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[64]">meter_set_value</a> from lto-llvm-6a46d2.o(.text.meter_set_value) referenced 2 times from lto-llvm-6a46d2.o(.text.Start_LVGL_Meter)
 <LI><a href="#[64]">meter_set_value</a> from lto-llvm-6a46d2.o(.text.meter_set_value) referenced 2 times from lto-llvm-6a46d2.o(.text.ui_speedMeter_update)
 <LI><a href="#[bb]">month_event_cb</a> from lto-llvm-6a46d2.o(.text.month_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.my_constructor)
 <LI><a href="#[be]">month_event_cb.486</a> from lto-llvm-6a46d2.o(.text.month_event_cb.486) referenced 2 times from lto-llvm-6a46d2.o(.text.my_constructor.483)
 <LI><a href="#[c8]">my_constructor</a> from lto-llvm-6a46d2.o(.text.my_constructor) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[ca]">my_constructor.483</a> from lto-llvm-6a46d2.o(.text.my_constructor.483) referenced from lto-llvm-6a46d2.o(.rodata)
 <LI><a href="#[b9]">prvIdleTask</a> from lto-llvm-6a46d2.o(.text.prvIdleTask) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[c0]">prvTaskExitError</a> from lto-llvm-6a46d2.o(.text.prvTaskExitError) referenced 2 times from lto-llvm-6a46d2.o(.text.prvInitialiseNewTask)
 <LI><a href="#[ba]">prvTimerTask</a> from lto-llvm-6a46d2.o(.text.prvTimerTask) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[9b]">pwd_char_hider_anim</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
 <LI><a href="#[9b]">pwd_char_hider_anim</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
 <LI><a href="#[9b]">pwd_char_hider_anim</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
 <LI><a href="#[9c]">pwd_char_hider_anim_ready</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
 <LI><a href="#[9c]">pwd_char_hider_anim_ready</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
 <LI><a href="#[9c]">pwd_char_hider_anim_ready</a> from lto-llvm-6a46d2.o(.text.pwd_char_hider_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
 <LI><a href="#[98]">scr_anim_ready</a> from lto-llvm-6a46d2.o(.text.scr_anim_ready) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
 <LI><a href="#[97]">scr_load_anim_start</a> from lto-llvm-6a46d2.o(.text.scr_load_anim_start) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
 <LI><a href="#[91]">scroll_anim_ready_cb</a> from lto-llvm-6a46d2.o(.text.scroll_anim_ready_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
 <LI><a href="#[c1]">scroll_anim_ready_cb.1077</a> from lto-llvm-6a46d2.o(.text.scroll_anim_ready_cb.1077) referenced 2 times from lto-llvm-6a46d2.o(.text.refr_position)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_event)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_obj_refr_size)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_x)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinbox_constructor)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_tabview_set_act)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
 <LI><a href="#[6a]">scroll_x_anim</a> from lto-llvm-6a46d2.o(.text.scroll_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.tileview_event_cb)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_event)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_obj_refr_size)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_y)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_spinbox_constructor)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_tabview_set_act)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.position_to_selected)
 <LI><a href="#[6b]">scroll_y_anim</a> from lto-llvm-6a46d2.o(.text.scroll_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.tileview_event_cb)
 <LI><a href="#[88]">set_ofs_x_anim</a> from lto-llvm-6a46d2.o(.text.set_ofs_x_anim) referenced 8 times from lto-llvm-6a46d2.o(.text.lv_label_refr_text)
 <LI><a href="#[88]">set_ofs_x_anim</a> from lto-llvm-6a46d2.o(.text.set_ofs_x_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_label_set_long_mode)
 <LI><a href="#[89]">set_ofs_y_anim</a> from lto-llvm-6a46d2.o(.text.set_ofs_y_anim) referenced 6 times from lto-llvm-6a46d2.o(.text.lv_label_refr_text)
 <LI><a href="#[89]">set_ofs_y_anim</a> from lto-llvm-6a46d2.o(.text.set_ofs_y_anim) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_label_set_long_mode)
 <LI><a href="#[b1]">set_value</a> from lto-llvm-6a46d2.o(.text.set_value) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[99]">set_x_anim</a> from lto-llvm-6a46d2.o(.text.set_x_anim) referenced 8 times from lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
 <LI><a href="#[9a]">set_y_anim</a> from lto-llvm-6a46d2.o(.text.set_y_anim) referenced 4 times from lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
 <LI><a href="#[96]">set_y_anim.1076</a> from lto-llvm-6a46d2.o(.text.set_y_anim.1076) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_roller_event)
 <LI><a href="#[96]">set_y_anim.1076</a> from lto-llvm-6a46d2.o(.text.set_y_anim.1076) referenced 4 times from lto-llvm-6a46d2.o(.text.refr_position)
 <LI><a href="#[a5]">theme_apply.442</a> from lto-llvm-6a46d2.o(.text.theme_apply.442) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_theme_default_init)
 <LI><a href="#[a6]">tileview_event_cb</a> from lto-llvm-6a46d2.o(.text.tileview_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_tileview_constructor)
 <LI><a href="#[93]">trans_anim_cb</a> from lto-llvm-6a46d2.o(.text.trans_anim_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_set_state)
 <LI><a href="#[95]">trans_anim_ready_cb</a> from lto-llvm-6a46d2.o(.text.trans_anim_ready_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_set_state)
 <LI><a href="#[94]">trans_anim_start_cb</a> from lto-llvm-6a46d2.o(.text.trans_anim_start_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.lv_obj_set_state)
 <LI><a href="#[b2]">ui_event_startup</a> from lto-llvm-6a46d2.o(.text.ui_event_startup) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[b3]">ui_speedMeter_update</a> from lto-llvm-6a46d2.o(.text.ui_speedMeter_update) referenced 2 times from lto-llvm-6a46d2.o(.text.main)
 <LI><a href="#[61]">vEventGroupSetBitsCallback</a> from lto-llvm-6a46d2.o(.text.vEventGroupSetBitsCallback) referenced 2 times from lto-llvm-6a46d2.o(.text.CAN1_RX0_IRQHandler)
 <LI><a href="#[bc]">value_changed_event_cb</a> from lto-llvm-6a46d2.o(.text.value_changed_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.my_constructor)
 <LI><a href="#[bf]">value_changed_event_cb.487</a> from lto-llvm-6a46d2.o(.text.value_changed_event_cb.487) referenced 2 times from lto-llvm-6a46d2.o(.text.my_constructor.483)
 <LI><a href="#[bd]">year_event_cb</a> from lto-llvm-6a46d2.o(.text.year_event_cb) referenced 2 times from lto-llvm-6a46d2.o(.text.my_constructor.483)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[113]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[115]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[275]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[276]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[116]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[277]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[117]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[149]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[119]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[11a]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[11b]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[11d]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[278]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[11f]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[121]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[123]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[279]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[133]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[125]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[127]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[27a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[27b]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[27c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[129]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[27d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[27e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[27f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[12b]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[280]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[281]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[282]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[283]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[284]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[285]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[286]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[287]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[288]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000026))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_stdio_2 &rArr; _initio &rArr; freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[289]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[28a]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[28b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[28c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[28d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[28e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[138]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[28f]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[12e]"></a>__rt_lib_shutdown_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_stdio_2 &rArr; _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[290]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[291]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[292]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[293]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[294]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[295]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[114]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[296]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[130]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[132]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[297]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[134]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; lv_scr_load_anim &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[298]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[160]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[137]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[299]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[139]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[158]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13b]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_IotUploadTask
</UL>

<P><STRONG><a name="[13d]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_IotUploadTask
</UL>

<P><STRONG><a name="[140]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[141]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[142]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[143]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[13f]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[118]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[145]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[11c]"></a>_printf_int_oct</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[29a]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[29b]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[14a]"></a>puts</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = puts &rArr; fputc &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[195]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[194]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[196]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
</UL>

<P><STRONG><a name="[186]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_IotUploadTask
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
</UL>

<P><STRONG><a name="[1ab]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[29c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[13e]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[5d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[14b]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[120]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[122]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[13c]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14d]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[124]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[14e]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[14f]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[146]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[16f]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[13a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[150]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
</UL>

<P><STRONG><a name="[14c]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[12d]"></a>_initio</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, initio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _initio &rArr; freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_stdio_2
</UL>

<P><STRONG><a name="[12f]"></a>_terminateio</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, initio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _terminateio &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_stdio_2
</UL>

<P><STRONG><a name="[29f]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2a1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[12a]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[156]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[154]"></a>setvbuf</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, setvbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[152]"></a>freopen</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, fopen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = freopen &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[15c]"></a>fopen</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, fopen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[155]"></a>_fclose_internal</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, fclose.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _fclose_internal &rArr; _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[2a2]"></a>fclose</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, fclose.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[161]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[153]"></a>__rt_SIGRTRED</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTRED &rArr; __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_adjust
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_create
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_letter
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_init_ctx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[2a3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2a4]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[2a5]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2a6]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2a7]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[2a8]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[2a9]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[165]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[128]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[15d]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
</UL>

<P><STRONG><a name="[15b]"></a>_fseek</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, fseek.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fseek &rArr; _ftell_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[2ab]"></a>fseek</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, fseek.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>_seterr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stdio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[16b]"></a>_writebuf</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>

<P><STRONG><a name="[15e]"></a>_fflush</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _fflush &rArr; _writebuf
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
</UL>

<P><STRONG><a name="[16d]"></a>_deferredlazyseek</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>

<P><STRONG><a name="[16e]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
</UL>

<P><STRONG><a name="[162]"></a>__rt_SIGRTRED_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtred_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
</UL>

<P><STRONG><a name="[173]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_IotUploadTask
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[2ac]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2af]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[169]"></a>_ftell_internal</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ftell.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ftell_internal
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[2b1]"></a>ftell</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, ftell.o(.text), UNUSED)

<P><STRONG><a name="[166]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[170]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>

<P><STRONG><a name="[2b2]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[184]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[2b4]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[172]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2b5]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_transform
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_transform
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
</UL>

<P><STRONG><a name="[2b6]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_adjust
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_create
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_init_ctx
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[2b7]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 1172 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 464 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.DMA2_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2_Stream1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>_sys_close</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._sys_close))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>

<P><STRONG><a name="[168]"></a>_sys_istty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._sys_istty))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[15a]"></a>_sys_open</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text._sys_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _sys_open &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[16c]"></a>_sys_write</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._sys_write))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[5f]"></a>fputc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fputc &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[135]"></a>main</STRONG> (Thumb, 12676 bytes, Stack size 128 bytes, lto-llvm-6a46d2.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = main &rArr; lv_scr_load_anim &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvPortStartFirstTask
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnableVFP
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[112]"></a>vTaskSwitchContext</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[60]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[2b8]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[2b9]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5e]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[17c]"></a>HAL_InitTick</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>HAL_GPIO_Init</STRONG> (Thumb, 446 bytes, Stack size 44 bytes, lto-llvm-6a46d2.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17d]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 568 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[265]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_ConfigClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>HAL_UART_Init</STRONG> (Thumb, 580 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17e]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[266]"></a>LCD_Init</STRONG> (Thumb, 758 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[267]"></a>LCD_Clear</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.LCD_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>lv_draw_sw_init_ctx</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_init_ctx
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[a8]"></a>disp_flush</STRONG> (Thumb, 892 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.disp_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = disp_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[1a3]"></a>_lv_ll_ins_head</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text._lv_ll_ins_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_ll_ins_head &rArr; block_prepare_used
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_event_startup
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
</UL>

<P><STRONG><a name="[1a4]"></a>block_locate_free</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.block_locate_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[1a5]"></a>block_prepare_used</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.block_prepare_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = block_prepare_used
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[a9]"></a>anim_timer</STRONG> (Thumb, 606 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.anim_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = anim_timer &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[aa]"></a>_lv_disp_refr_timer</STRONG> (Thumb, 3148 bytes, Stack size 96 bytes, lto-llvm-6a46d2.o(.text._lv_disp_refr_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 940 + Unknown Stack Size
<LI>Call Chain = _lv_disp_refr_timer &rArr; refr_area_part &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[260]"></a>lv_theme_default_init</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_theme_default_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = lv_theme_default_init &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19d]"></a>lv_obj_class_create_obj</STRONG> (Thumb, 1064 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_obj_class_create_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = lv_obj_class_create_obj &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[19e]"></a>lv_obj_class_init_obj</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_obj_class_init_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[23e]"></a>lv_obj_remove_style</STRONG> (Thumb, 376 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_remove_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f2]"></a>lv_obj_clear_flag</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_clear_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_constructor
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_section_constructor
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_cont_constructor
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_value_changed_event_cb
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[1f3]"></a>lv_obj_allocate_spec_attr</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_allocate_spec_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = lv_obj_allocate_spec_attr &rArr; block_prepare_used
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[1b3]"></a>lv_obj_invalidate</STRONG> (Thumb, 412 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_internal
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_set_value
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_value
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_ready
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_exec_cb
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_y_anim
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_x_anim
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim_ready
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb.487
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[239]"></a>lv_theme_apply</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_theme_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>lv_img_decoder_built_in_info</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_img_decoder_built_in_info &rArr; lv_fs_read &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[ac]"></a>lv_img_decoder_built_in_open</STRONG> (Thumb, 634 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = lv_img_decoder_built_in_open &rArr; lv_img_decoder_built_in_close &rArr; lv_fs_close &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[ad]"></a>lv_img_decoder_built_in_read_line</STRONG> (Thumb, 1804 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_img_decoder_built_in_read_line &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[ae]"></a>lv_img_decoder_built_in_close</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_built_in_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lv_img_decoder_built_in_close &rArr; lv_fs_close &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[1e3]"></a>lv_mem_realloc</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[af]"></a>flex_update</STRONG> (Thumb, 1404 bytes, Stack size 128 bytes, lto-llvm-6a46d2.o(.text.flex_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = flex_update &rArr; lv_obj_refr_size &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[25b]"></a>lv_style_register_prop</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_style_register_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lv_style_register_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>grid_update</STRONG> (Thumb, 3938 bytes, Stack size 136 bytes, lto-llvm-6a46d2.o(.text.grid_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = grid_update &rArr; lv_obj_refr_size &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_align
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[18e]"></a>lv_obj_set_local_style_prop</STRONG> (Thumb, 662 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iotStatusUpdate
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_section_constructor
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_cont_constructor
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_page_constructor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[1fd]"></a>lv_obj_set_width</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[21a]"></a>lv_obj_set_height</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_height &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[250]"></a>lv_obj_set_x</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_x &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_x_anim
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[1e8]"></a>lv_obj_set_y</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_y_anim
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_y_anim.1076
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[63]"></a>lv_anim_path_linear</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_anim_path_linear))
<BR>[Address Reference Count : 12]<UL><LI> lto-llvm-6a46d2.o(.text.main)
<LI> lto-llvm-6a46d2.o(.text.Start_LVGL_Meter)
<LI> lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
<LI> lto-llvm-6a46d2.o(.text.style_init)
<LI> lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
<LI> lto-llvm-6a46d2.o(.text.lv_anim_init)
<LI> lto-llvm-6a46d2.o(.text.lv_bar_set_value)
<LI> lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
<LI> lto-llvm-6a46d2.o(.text.lv_label_refr_text)
<LI> lto-llvm-6a46d2.o(.text.lv_switch_event)
<LI> lto-llvm-6a46d2.o(.text.ui_speedMeter_update)
</UL>
<P><STRONG><a name="[b1]"></a>set_value</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = set_value &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[18a]"></a>lv_anim_start</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lv_anim_start &rArr; lv_anim_del &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[224]"></a>lv_img_set_src</STRONG> (Thumb, 770 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_img_set_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = lv_img_set_src &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
</UL>

<P><STRONG><a name="[1b2]"></a>lv_obj_add_flag</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_obj_add_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_add_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_constructor
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_page_constructor
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_value_changed_event_cb
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[b2]"></a>ui_event_startup</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.ui_event_startup))
<BR><BR>[Stack]<UL><LI>Max Depth = 920 + Unknown Stack Size
<LI>Call Chain = ui_event_startup &rArr; lv_scr_load_anim &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[1b1]"></a>lv_obj_set_state</STRONG> (Thumb, 1822 bytes, Stack size 144 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
</UL>

<P><STRONG><a name="[18d]"></a>lv_label_set_text</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_label_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_value_changed_event_cb
</UL>

<P><STRONG><a name="[219]"></a>lv_label_refr_text</STRONG> (Thumb, 2378 bytes, Stack size 160 bytes, lto-llvm-6a46d2.o(.text.lv_label_refr_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_byte_id
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
</UL>

<P><STRONG><a name="[233]"></a>lv_obj_set_size</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_size &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[b3]"></a>ui_speedMeter_update</STRONG> (Thumb, 410 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.ui_speedMeter_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = ui_speedMeter_update &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[b4]"></a>iotStatusUpdate</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.iotStatusUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = iotStatusUpdate &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[255]"></a>lv_scr_load_anim</STRONG> (Thumb, 850 bytes, Stack size 208 bytes, lto-llvm-6a46d2.o(.text.lv_scr_load_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 912 + Unknown Stack Size
<LI>Call Chain = lv_scr_load_anim &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_internal
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_event_startup
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18f]"></a>event_send_core</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.event_send_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_redraw
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj_and_children
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_anim_start
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_internal
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Task
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[b5]"></a>Start_IotUploadTask</STRONG> (Thumb, 292 bytes, Stack size 936 bytes, lto-llvm-6a46d2.o(.text.Start_IotUploadTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = Start_IotUploadTask &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[268]"></a>osThreadNew</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = osThreadNew &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>Start_LVGL_Task</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.Start_LVGL_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Start_LVGL_Task &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[b7]"></a>Start_LVGL_Meter</STRONG> (Thumb, 572 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.Start_LVGL_Meter))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = Start_LVGL_Meter &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[b8]"></a>Start_LVGL_Lap_Timer</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.Start_LVGL_Lap_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Start_LVGL_Lap_Timer &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[269]"></a>pvPortMalloc</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[187]"></a>xQueueGenericSend</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGenericSend &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Lap_Timer
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Task
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>prvIdleTask</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = prvIdleTask &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[26a]"></a>prvInitialiseNewTask</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvInitialiseNewTask &rArr; __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[26b]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 1334 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[ba]"></a>prvTimerTask</STRONG> (Thumb, 2430 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = prvTimerTask &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.main)
</UL>
<P><STRONG><a name="[26c]"></a>vPortEnableVFP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.vPortEnableVFP))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26d]"></a>prvPortStartFirstTask</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.prvPortStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[190]"></a>lv_timer_handler</STRONG> (Thumb, 828 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_timer_handler &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Task
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>osEventFlagsWait</STRONG> (Thumb, 454 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.osEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = osEventFlagsWait &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_IotUploadTask
</UL>

<P><STRONG><a name="[188]"></a>osDelay</STRONG> (Thumb, 388 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = osDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Lap_Timer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Task
</UL>

<P><STRONG><a name="[189]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 854 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Lap_Timer
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Task
</UL>

<P><STRONG><a name="[64]"></a>meter_set_value</STRONG> (Thumb, 404 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.meter_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = meter_set_value &rArr; inv_line &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.Start_LVGL_Meter)
<LI> lto-llvm-6a46d2.o(.text.ui_speedMeter_update)
</UL>
<P><STRONG><a name="[18b]"></a>lv_label_set_text_fmt</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_label_set_text_fmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lapTimer_cb
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[18c]"></a>lv_bar_set_value</STRONG> (Thumb, 166 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_bar_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = lv_bar_set_value &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_LVGL_Meter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_speedMeter_update
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[193]"></a>HAL_UART_Transmit</STRONG> (Thumb, 622 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[61]"></a>vEventGroupSetBitsCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.vEventGroupSetBitsCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = vEventGroupSetBitsCallback &rArr; xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.CAN1_RX0_IRQHandler)
</UL>
<P><STRONG><a name="[178]"></a>xEventGroupSetBits</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.xEventGroupSetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupSetBitsCallback
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[17a]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[17b]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[192]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 910 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[17f]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 1370 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[181]"></a>HAL_DMA_Abort</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[180]"></a>UART_Receive_IT</STRONG> (Thumb, 1040 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.UART_DMAAbortOnError))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[256]"></a>scr_load_internal</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.scr_load_internal))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = scr_load_internal &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
</UL>

<P><STRONG><a name="[1ef]"></a>lv_anim_del</STRONG> (Thumb, 912 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_anim_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_anim_del &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_destructor
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_destructor
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
</UL>

<P><STRONG><a name="[24f]"></a>lv_obj_set_pos</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_pos &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
</UL>

<P><STRONG><a name="[24b]"></a>lv_obj_remove_local_style_prop</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_remove_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = lv_obj_remove_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
</UL>

<P><STRONG><a name="[215]"></a>lv_obj_del</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
</UL>

<P><STRONG><a name="[97]"></a>scr_load_anim_start</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.scr_load_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = scr_load_anim_start &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
</UL>
<P><STRONG><a name="[98]"></a>scr_anim_ready</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.scr_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 768 + Unknown Stack Size
<LI>Call Chain = scr_anim_ready &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
</UL>
<P><STRONG><a name="[99]"></a>set_x_anim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.set_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = set_x_anim &rArr; lv_obj_set_x &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
</UL>
<P><STRONG><a name="[9a]"></a>set_y_anim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.set_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = set_y_anim &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_scr_load_anim)
</UL>
<P><STRONG><a name="[1b8]"></a>lv_event_send</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[1de]"></a>focus_next_core</STRONG> (Thumb, 338 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.focus_next_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[1f9]"></a>lv_indev_reset_long_press</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_indev_reset_long_press))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[10a]"></a>lv_obj_constructor</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = lv_obj_constructor &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1d5]"></a>lv_obj_get_scroll_left</STRONG> (Thumb, 466 bytes, Stack size 80 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_scroll_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1b7]"></a>lv_obj_get_style_prop</STRONG> (Thumb, 670 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform_point
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_set_value
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_to_selected_cell
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_knob_area
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[10b]"></a>lv_obj_destructor</STRONG> (Thumb, 662 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = lv_obj_destructor &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[8d]"></a>_lv_ll_get_head</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._lv_ll_get_head))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[8e]"></a>_lv_ll_get_next</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._lv_ll_get_next))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[8f]"></a>_lv_ll_get_tail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._lv_ll_get_tail))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[90]"></a>_lv_ll_get_prev</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._lv_ll_get_prev))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[19c]"></a>lv_tlsf_free</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_tlsf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_destroy
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_destructor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_destructor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_destructor
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_destructor
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_destructor
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_destructor
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_page_destructor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[10c]"></a>lv_obj_event</STRONG> (Thumb, 4054 bytes, Stack size 240 bytes, lto-llvm-6a46d2.o(.text.lv_obj_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_editable
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[234]"></a>lv_obj_get_scrollbar_area</STRONG> (Thumb, 1964 bytes, Stack size 80 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_scrollbar_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>

<P><STRONG><a name="[1ba]"></a>lv_obj_invalidate_area</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_invalidate_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_set_value
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_blink_anim_cb
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>

<P><STRONG><a name="[23f]"></a>lv_obj_is_editable</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_obj_is_editable))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[21b]"></a>lv_obj_get_scroll_right</STRONG> (Thumb, 438 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_scroll_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lv_obj_get_scroll_right &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[199]"></a>layout_update_core</STRONG> (Thumb, 824 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.layout_update_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[240]"></a>lv_obj_scroll_by</STRONG> (Thumb, 882 bytes, Stack size 136 bytes, lto-llvm-6a46d2.o(.text.lv_obj_scroll_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_by &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[6b]"></a>scroll_y_anim</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.scroll_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = scroll_y_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Address Reference Count : 10]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_event)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_refr_size)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_y)
<LI> lto-llvm-6a46d2.o(.text.lv_spinbox_constructor)
<LI> lto-llvm-6a46d2.o(.text.lv_tabview_set_act)
<LI> lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb)
<LI> lto-llvm-6a46d2.o(.text.tileview_event_cb)
<LI> lto-llvm-6a46d2.o(.text.position_to_selected)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
</UL>
<P><STRONG><a name="[6a]"></a>scroll_x_anim</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.scroll_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = scroll_x_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Address Reference Count : 9]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_event)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_refr_size)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
<LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_x)
<LI> lto-llvm-6a46d2.o(.text.lv_spinbox_constructor)
<LI> lto-llvm-6a46d2.o(.text.lv_tabview_set_act)
<LI> lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb)
<LI> lto-llvm-6a46d2.o(.text.tileview_event_cb)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
</UL>
<P><STRONG><a name="[241]"></a>lv_obj_get_scroll_bottom</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_scroll_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lv_obj_get_scroll_bottom &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1f6]"></a>lv_obj_calculate_ext_draw_size</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_calculate_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[1fe]"></a>lv_obj_mark_layout_as_dirty</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, lto-llvm-6a46d2.o(.text.lv_obj_mark_layout_as_dirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_obj_mark_layout_as_dirty
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[1c9]"></a>lv_obj_init_draw_rect_dsc</STRONG> (Thumb, 1094 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_init_draw_rect_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
</UL>

<P><STRONG><a name="[1bd]"></a>lv_mem_buf_get</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_mem_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[1be]"></a>lv_draw_mask_radius_init</STRONG> (Thumb, 1496 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_radius_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[197]"></a>_lv_area_is_in</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text._lv_area_is_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _lv_area_is_in &rArr; _lv_area_is_point_on
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[212]"></a>lv_draw_mask_remove_custom</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_remove_custom))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1c1]"></a>lv_draw_mask_free_param</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_free_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_draw_mask_free_param &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[1c0]"></a>lv_mem_buf_release</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_mem_buf_release))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[242]"></a>lv_obj_scroll_to_x</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_to_x &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[243]"></a>lv_obj_scroll_to_y</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_obj_scroll_to_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[21c]"></a>lv_style_get_prop</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_style_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[1e2]"></a>get_trans_style</STRONG> (Thumb, 794 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.get_trans_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = get_trans_style &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[24e]"></a>lv_style_set_prop</STRONG> (Thumb, 630 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_style_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[93]"></a>trans_anim_cb</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.trans_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = trans_anim_cb &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[94]"></a>trans_anim_start_cb</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.trans_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = trans_anim_start_cb &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[95]"></a>trans_anim_ready_cb</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.trans_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = trans_anim_ready_cb &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[237]"></a>lv_obj_refresh_style</STRONG> (Thumb, 794 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_refresh_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[1fc]"></a>lv_obj_refresh_ext_draw_size</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_refresh_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[23a]"></a>lv_obj_construct</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_obj_construct))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = lv_obj_construct &rArr;  lv_obj_construct (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[200]"></a>lv_obj_refresh_self_size</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_refresh_self_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_refresh_self_size &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1ce]"></a>lv_memcpy</STRONG> (Thumb, 1628 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_buffer_copy
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
</UL>

<P><STRONG><a name="[1cb]"></a>lv_obj_init_draw_label_dsc</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_init_draw_label_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_init_draw_label_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
</UL>

<P><STRONG><a name="[1d1]"></a>lv_obj_init_draw_img_dsc</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_init_draw_img_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_init_draw_img_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
</UL>

<P><STRONG><a name="[1d7]"></a>lv_obj_init_draw_line_dsc</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_init_draw_line_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_init_draw_line_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1f4]"></a>lv_obj_init_draw_arc_dsc</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_init_draw_arc_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_init_draw_arc_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[203]"></a>lv_obj_draw_dsc_init</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_draw_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = lv_obj_draw_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1dd]"></a>lv_obj_refr_size</STRONG> (Thumb, 2468 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_obj_refr_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = lv_obj_refr_size &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
</UL>

<P><STRONG><a name="[249]"></a>lv_obj_scroll_by_bounded</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_scroll_by_bounded))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_to_selected_cell
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[23b]"></a>lv_obj_scrollbar_invalidate</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_scrollbar_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = lv_obj_scrollbar_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[23d]"></a>lv_obj_readjust_scroll</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_obj_readjust_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[1ea]"></a>lv_obj_area_is_visible</STRONG> (Thumb, 550 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_obj_area_is_visible))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_transformed_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[246]"></a>_lv_inv_area</STRONG> (Thumb, 350 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text._lv_inv_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_inv_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[238]"></a>lv_obj_get_transformed_area</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_transformed_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_transform_point
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[245]"></a>lv_obj_transform_point</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_transform_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + In Cycle
<LI>Call Chain = lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform_point
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_transform_point
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_transform_point
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_transformed_area
</UL>

<P><STRONG><a name="[251]"></a>transform_point</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.transform_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = transform_point &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_point_transform
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_transform_point
</UL>

<P><STRONG><a name="[1a1]"></a>lv_point_transform</STRONG> (Thumb, 708 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_point_transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_point_transform
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform_point
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[6c]"></a>lv_obj_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_width))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.find_track_end)
</UL>
<P><STRONG><a name="[6d]"></a>lv_obj_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_height))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.find_track_end)
</UL>
<P><STRONG><a name="[1fb]"></a>lv_obj_get_content_height</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_obj_get_content_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[1f0]"></a>lv_obj_move_to</STRONG> (Thumb, 476 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_obj_move_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[1b9]"></a>lv_obj_move_children_by</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_move_children_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = lv_obj_move_children_by &rArr;  lv_obj_move_children_by (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[19f]"></a>lv_obj_align</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_obj_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_obj_align &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
</UL>

<P><STRONG><a name="[91]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.scroll_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = scroll_anim_ready_cb &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
</UL>
<P><STRONG><a name="[92]"></a>lv_anim_path_ease_out</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_anim_path_ease_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_anim_path_ease_out
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_obj_scroll_by)
<LI> lto-llvm-6a46d2.o(.text.refr_position)
</UL>
<P><STRONG><a name="[235]"></a>lv_obj_add_style</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_obj_add_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = lv_obj_add_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.442
</UL>

<P><STRONG><a name="[236]"></a>trans_del</STRONG> (Thumb, 818 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.trans_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = trans_del &rArr; lv_style_remove_prop &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>

<P><STRONG><a name="[24c]"></a>lv_style_remove_prop</STRONG> (Thumb, 464 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_style_remove_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_style_remove_prop &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
</UL>

<P><STRONG><a name="[24a]"></a>refresh_children_style</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.refresh_children_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + In Cycle
<LI>Call Chain = refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>

<P><STRONG><a name="[244]"></a>lv_style_prop_get_default</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_style_prop_get_default))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[24d]"></a>lv_style_reset</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_style_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = lv_style_reset &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[262]"></a>report_style_change_core</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.report_style_change_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[23c]"></a>obj_del_core</STRONG> (Thumb, 742 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.obj_del_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + In Cycle
<LI>Call Chain = obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[217]"></a>lv_obj_set_parent</STRONG> (Thumb, 426 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_obj_set_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_parent &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_page_constructor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
</UL>

<P><STRONG><a name="[218]"></a>lv_obj_move_to_index</STRONG> (Thumb, 536 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_obj_move_to_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_obj_move_to_index &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[19a]"></a>refr_area_part</STRONG> (Thumb, 4008 bytes, Stack size 240 bytes, lto-llvm-6a46d2.o(.text.refr_area_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 844 + Unknown Stack Size
<LI>Call Chain = refr_area_part &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj_and_children
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[252]"></a>lv_refr_get_top_obj</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_refr_get_top_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = lv_refr_get_top_obj &rArr;  lv_refr_get_top_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
</UL>

<P><STRONG><a name="[272]"></a>refr_obj_and_children</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.refr_obj_and_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = refr_obj_and_children &rArr; refr_obj &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
</UL>

<P><STRONG><a name="[1c3]"></a>lv_img_decoder_get_info</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_img_decoder_get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[1c4]"></a>lv_draw_img</STRONG> (Thumb, 1844 bytes, Stack size 168 bytes, lto-llvm-6a46d2.o(.text.lv_draw_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_layer_blend
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_area_part
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[248]"></a>refr_obj</STRONG> (Thumb, 1760 bytes, Stack size 120 bytes, lto-llvm-6a46d2.o(.text.refr_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = refr_obj &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_redraw
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_transformed_area
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_redraw
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj_and_children
</UL>

<P><STRONG><a name="[247]"></a>lv_obj_redraw</STRONG> (Thumb, 548 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_obj_redraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = lv_obj_redraw &rArr;  refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_obj
</UL>

<P><STRONG><a name="[1ad]"></a>apply_theme</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.apply_theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = apply_theme &rArr;  apply_theme (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
</UL>

<P><STRONG><a name="[1d3]"></a>lv_theme_get_color_primary</STRONG> (Thumb, 186 bytes, Stack size 28 bytes, lto-llvm-6a46d2.o(.text.lv_theme_get_color_primary))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_theme_get_color_primary
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_constructor
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
</UL>

<P><STRONG><a name="[78]"></a>lv_draw_sw_arc</STRONG> (Thumb, 6708 bytes, Stack size 400 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_arc &rArr; lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[79]"></a>lv_draw_sw_rect</STRONG> (Thumb, 7596 bytes, Stack size 216 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 932 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_rect &rArr; draw_bg_img &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7a]"></a>lv_draw_sw_letter</STRONG> (Thumb, 486 bytes, Stack size 128 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_letter))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_letter &rArr; draw_letter_normal &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7b]"></a>lv_draw_sw_img_decoded</STRONG> (Thumb, 3310 bytes, Stack size 272 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_img_decoded))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_img_decoded &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7c]"></a>lv_draw_sw_line</STRONG> (Thumb, 4652 bytes, Stack size 352 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_line &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7d]"></a>lv_draw_sw_polygon</STRONG> (Thumb, 1858 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_polygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_polygon &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7e]"></a>lv_draw_sw_bg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_bg &rArr; draw_bg_img &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[7f]"></a>lv_draw_sw_transform</STRONG> (Thumb, 4770 bytes, Stack size 208 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = lv_draw_sw_transform &rArr; __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[80]"></a>lv_draw_sw_layer_create</STRONG> (Thumb, 832 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_layer_create &rArr; block_prepare_used
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[81]"></a>lv_draw_sw_wait_for_finish</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_wait_for_finish))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[82]"></a>lv_draw_sw_buffer_copy</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_buffer_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_draw_sw_buffer_copy &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[83]"></a>lv_draw_sw_layer_adjust</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_layer_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[84]"></a>lv_draw_sw_blend_basic</STRONG> (Thumb, 7456 bytes, Stack size 96 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_blend_basic))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_draw_sw_blend_basic &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[85]"></a>lv_draw_sw_layer_blend</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = lv_draw_sw_layer_blend &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[86]"></a>lv_draw_sw_layer_destroy</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_layer_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_draw_sw_layer_destroy &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[77]"></a>lv_draw_mask_angle</STRONG> (Thumb, 1052 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_angle &rArr; lv_draw_mask_line &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_sw_arc)
</UL>
<P><STRONG><a name="[20c]"></a>lv_draw_mask_line_points_init</STRONG> (Thumb, 432 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_line_points_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_line_points_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[206]"></a>lv_trigo_sin</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_trigo_sin))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area
</UL>

<P><STRONG><a name="[20e]"></a>lv_draw_mask_add</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_add))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[211]"></a>lv_draw_sw_blend</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_sw_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_draw_sw_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[c5]"></a>color_blend_true_color_additive</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.color_blend_true_color_additive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = color_blend_true_color_additive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[c7]"></a>color_blend_true_color_multiply</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.color_blend_true_color_multiply))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = color_blend_true_color_multiply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[c6]"></a>color_blend_true_color_subtractive</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.color_blend_true_color_subtractive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = color_blend_true_color_subtractive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1bc]"></a>lv_draw_mask_is_any</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_is_any))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_draw_mask_is_any &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[1cc]"></a>draw_letter_normal</STRONG> (Thumb, 2408 bytes, Stack size 184 bytes, lto-llvm-6a46d2.o(.text.draw_letter_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = draw_letter_normal &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_letter
</UL>

<P><STRONG><a name="[20b]"></a>lv_memset_00</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_memset_00))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[20f]"></a>lv_disp_get_hor_res</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_disp_get_hor_res))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[210]"></a>lv_memset_ff</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_memset_ff))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_memset_ff &rArr; __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[213]"></a>shadow_blur_corner</STRONG> (Thumb, 1472 bytes, Stack size 120 bytes, lto-llvm-6a46d2.o(.text.shadow_blur_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = shadow_blur_corner &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[1bf]"></a>lv_memset</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_memset &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[1bb]"></a>draw_bg</STRONG> (Thumb, 3556 bytes, Stack size 176 bytes, lto-llvm-6a46d2.o(.text.draw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = draw_bg &rArr; lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_bg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[1c2]"></a>draw_bg_img</STRONG> (Thumb, 896 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.draw_bg_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = draw_bg_img &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_bg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[1c7]"></a>draw_border_generic</STRONG> (Thumb, 4902 bytes, Stack size 216 bytes, lto-llvm-6a46d2.o(.text.draw_border_generic))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = draw_border_generic &rArr; lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[1a7]"></a>_lv_txt_get_next_line</STRONG> (Thumb, 1372 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text._lv_txt_get_next_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[1c5]"></a>lv_txt_get_width</STRONG> (Thumb, 510 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.lv_txt_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lv_txt_get_width &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[1c6]"></a>lv_draw_label</STRONG> (Thumb, 2076 bytes, Stack size 264 bytes, lto-llvm-6a46d2.o(.text.lv_draw_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[1eb]"></a>lv_draw_arc_get_area</STRONG> (Thumb, 3670 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_draw_arc_get_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_draw_arc_get_area
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_set_value
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[209]"></a>lv_draw_img_dsc_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_img_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_img_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
</UL>

<P><STRONG><a name="[1a0]"></a>_lv_img_buf_get_transformed_area</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text._lv_img_buf_get_transformed_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _lv_img_buf_get_transformed_area &rArr; lv_point_transform
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_point_transform
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
</UL>

<P><STRONG><a name="[207]"></a>_lv_area_intersect</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text._lv_area_intersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[208]"></a>lv_img_decoder_close</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_img_decoder_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_img_decoder_close &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[20a]"></a>lv_draw_label_dsc_init</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_label_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_label_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[1cf]"></a>lv_txt_get_size</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_txt_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[201]"></a>lv_draw_line_dsc_init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_line_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_line_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[1a8]"></a>lv_txt_utf8_next</STRONG> (Thumb, 224 bytes, Stack size 12 bytes, lto-llvm-6a46d2.o(.text.lv_txt_utf8_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>

<P><STRONG><a name="[198]"></a>_lv_area_is_point_on</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text._lv_area_is_point_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
</UL>

<P><STRONG><a name="[75]"></a>lv_draw_mask_line</STRONG> (Thumb, 1198 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_line &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_mask_line_points_init)
</UL>
<P><STRONG><a name="[76]"></a>lv_draw_mask_radius</STRONG> (Thumb, 1904 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_draw_mask_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_radius
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_draw_mask_radius_init)
</UL>
<P><STRONG><a name="[20d]"></a>lv_mem_alloc</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_mem_alloc &rArr; block_prepare_used
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[202]"></a>lv_draw_rect_dsc_init</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_draw_rect_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_rect_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[220]"></a>lv_fs_get_ext</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_fs_get_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_get_ext &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[222]"></a>lv_fs_open</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_fs_open))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[221]"></a>lv_fs_read</STRONG> (Thumb, 454 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_fs_read &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[21f]"></a>lv_fs_close</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_fs_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_fs_close &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[223]"></a>lv_fs_seek</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_fs_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[1dc]"></a>find_track_end</STRONG> (Thumb, 672 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.find_track_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = find_track_end &rArr; lv_mem_buf_get &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[1b6]"></a>children_repos</STRONG> (Thumb, 1502 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.children_repos))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = children_repos &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[66]"></a>lv_area_set_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_set_height))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.children_repos)
</UL>
<P><STRONG><a name="[67]"></a>lv_area_set_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_set_width))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.children_repos)
</UL>
<P><STRONG><a name="[68]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_get_width))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.children_repos)
</UL>
<P><STRONG><a name="[69]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_get_height))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.children_repos)
</UL>
<P><STRONG><a name="[1e4]"></a>grid_align</STRONG> (Thumb, 704 bytes, Stack size 44 bytes, lto-llvm-6a46d2.o(.text.grid_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = grid_align
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[a5]"></a>theme_apply.442</STRONG> (Thumb, 4192 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.theme_apply.442))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = theme_apply.442 &rArr; lv_obj_add_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[261]"></a>style_init</STRONG> (Thumb, 25020 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.style_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = style_init &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[c2]"></a>dark_color_filter_cb</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.dark_color_filter_cb))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.style_init)
</UL>
<P><STRONG><a name="[c3]"></a>grey_filter_cb</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.grey_filter_cb))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.style_init)
</UL>
<P><STRONG><a name="[c8]"></a>my_constructor</STRONG> (Thumb, 790 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.my_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = my_constructor &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[bb]"></a>month_event_cb</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.month_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = month_event_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.my_constructor)
</UL>
<P><STRONG><a name="[22a]"></a>lv_label_set_long_mode</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_label_set_long_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = lv_label_set_long_mode &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[bc]"></a>value_changed_event_cb</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.value_changed_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = value_changed_event_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.my_constructor)
</UL>
<P><STRONG><a name="[1ff]"></a>lv_calendar_set_showed_date</STRONG> (Thumb, 1144 bytes, Stack size 104 bytes, lto-llvm-6a46d2.o(.text.lv_calendar_set_showed_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = lv_calendar_set_showed_date &rArr; highlight_update &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb.486
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[c9]"></a>lv_calendar_constructor</STRONG> (Thumb, 928 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_calendar_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = lv_calendar_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1f8]"></a>lv_btnmatrix_set_map</STRONG> (Thumb, 1850 bytes, Stack size 152 bytes, lto-llvm-6a46d2.o(.text.lv_btnmatrix_set_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_constructor
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[1e6]"></a>invalidate_button_area</STRONG> (Thumb, 390 bytes, Stack size 80 bytes, lto-llvm-6a46d2.o(.text.invalidate_button_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[74]"></a>draw_part_begin_event_cb</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.draw_part_begin_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = draw_part_begin_event_cb &rArr; lv_theme_get_color_primary
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_calendar_constructor)
</UL>
<P><STRONG><a name="[1e5]"></a>highlight_update</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.highlight_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = highlight_update &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[1da]"></a>lv_snprintf</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[ca]"></a>my_constructor.483</STRONG> (Thumb, 568 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.my_constructor.483))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = my_constructor.483 &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[21d]"></a>lv_dropdown_set_options</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_set_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lv_dropdown_set_options &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor.483
</UL>

<P><STRONG><a name="[bd]"></a>year_event_cb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.year_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = year_event_cb &rArr; lv_calendar_set_showed_date &rArr; highlight_update &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.my_constructor.483)
</UL>
<P><STRONG><a name="[be]"></a>month_event_cb.486</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.month_event_cb.486))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = month_event_cb.486 &rArr; lv_calendar_set_showed_date &rArr; highlight_update &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.my_constructor.483)
</UL>
<P><STRONG><a name="[bf]"></a>value_changed_event_cb.487</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.value_changed_event_cb.487))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = value_changed_event_cb.487 &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.my_constructor.483)
</UL>
<P><STRONG><a name="[cb]"></a>lv_chart_constructor</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_chart_constructor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[cc]"></a>lv_chart_destructor</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_chart_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lv_chart_destructor &rArr; _lv_ll_clear &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1a2]"></a>_lv_ll_clear</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text._lv_ll_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _lv_ll_clear &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_destructor
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_destructor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_menu_back_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
</UL>

<P><STRONG><a name="[cd]"></a>lv_chart_event</STRONG> (Thumb, 3566 bytes, Stack size 376 bytes, lto-llvm-6a46d2.o(.text.lv_chart_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = lv_chart_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_bar
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_scatter
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_series_line
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1ed]"></a>invalidate_point</STRONG> (Thumb, 458 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.invalidate_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = invalidate_point &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1db]"></a>draw_y_ticks</STRONG> (Thumb, 1272 bytes, Stack size 288 bytes, lto-llvm-6a46d2.o(.text.draw_y_ticks))
<BR><BR>[Stack]<UL><LI>Max Depth = 724 + Unknown Stack Size
<LI>Call Chain = draw_y_ticks &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1d9]"></a>draw_x_ticks</STRONG> (Thumb, 1386 bytes, Stack size 272 bytes, lto-llvm-6a46d2.o(.text.draw_x_ticks))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = draw_x_ticks &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1d6]"></a>draw_series_line</STRONG> (Thumb, 2182 bytes, Stack size 328 bytes, lto-llvm-6a46d2.o(.text.draw_series_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = draw_series_line &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1d8]"></a>draw_series_scatter</STRONG> (Thumb, 2042 bytes, Stack size 320 bytes, lto-llvm-6a46d2.o(.text.draw_series_scatter))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = draw_series_scatter &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[1d4]"></a>draw_series_bar</STRONG> (Thumb, 1092 bytes, Stack size 264 bytes, lto-llvm-6a46d2.o(.text.draw_series_bar))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = draw_series_bar &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[ce]"></a>lv_colorwheel_constructor</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_colorwheel_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_colorwheel_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[204]"></a>refr_knob_pos</STRONG> (Thumb, 600 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.refr_knob_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = refr_knob_pos &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
</UL>

<P><STRONG><a name="[cf]"></a>lv_colorwheel_event</STRONG> (Thumb, 3524 bytes, Stack size 192 bytes, lto-llvm-6a46d2.o(.text.lv_colorwheel_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072 + Unknown Stack Size
<LI>Call Chain = lv_colorwheel_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[205]"></a>lv_colorwheel_set_hsv</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_colorwheel_set_hsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_colorwheel_set_hsv &rArr; refr_knob_pos &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
</UL>

<P><STRONG><a name="[d0]"></a>lv_led_constructor</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_led_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_led_constructor &rArr; lv_theme_get_color_primary
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d1]"></a>lv_led_event</STRONG> (Thumb, 956 bytes, Stack size 224 bytes, lto-llvm-6a46d2.o(.text.lv_led_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = lv_led_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d2]"></a>lv_menu_constructor</STRONG> (Thumb, 938 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_menu_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = lv_menu_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[8b]"></a>lv_menu_back_event_cb</STRONG> (Thumb, 748 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_menu_back_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = lv_menu_back_event_cb &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_menu_constructor)
</UL>
<P><STRONG><a name="[8c]"></a>lv_menu_value_changed_event_cb</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_menu_value_changed_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = lv_menu_value_changed_event_cb &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_menu_constructor)
</UL>
<P><STRONG><a name="[d3]"></a>lv_menu_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_menu_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lv_menu_destructor &rArr; _lv_ll_clear &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d4]"></a>lv_menu_page_constructor</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_menu_page_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = lv_menu_page_constructor &rArr; lv_obj_set_parent &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d5]"></a>lv_menu_page_destructor</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_menu_page_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_menu_page_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d6]"></a>lv_menu_cont_constructor</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_menu_cont_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = lv_menu_cont_constructor &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d7]"></a>lv_menu_section_constructor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_menu_section_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = lv_menu_section_constructor &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d8]"></a>lv_meter_constructor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_meter_constructor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[d9]"></a>lv_meter_destructor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_meter_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_meter_destructor &rArr; _lv_ll_clear &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[da]"></a>lv_meter_event</STRONG> (Thumb, 4120 bytes, Stack size 416 bytes, lto-llvm-6a46d2.o(.text.lv_meter_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = lv_meter_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_point_transform
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1ec]"></a>inv_line</STRONG> (Thumb, 740 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.inv_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = inv_line &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter_set_value
</UL>

<P><STRONG><a name="[db]"></a>lv_spinbox_constructor</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_spinbox_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = lv_spinbox_constructor &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[258]"></a>lv_spinbox_updatevalue</STRONG> (Thumb, 1276 bytes, Stack size 152 bytes, lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = lv_spinbox_updatevalue &rArr; lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_prev
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[dc]"></a>lv_spinbox_event</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_spinbox_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056 + Unknown Stack Size
<LI>Call Chain = lv_spinbox_event &rArr; lv_textarea_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_prev
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[10f]"></a>lv_textarea_event</STRONG> (Thumb, 994 bytes, Stack size 160 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = lv_textarea_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[228]"></a>lv_textarea_set_cursor_pos</STRONG> (Thumb, 710 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + Unknown Stack Size
<LI>Call Chain = lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[227]"></a>lv_textarea_add_char</STRONG> (Thumb, 462 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_add_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[259]"></a>lv_spinbox_step_prev</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_spinbox_step_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = lv_spinbox_step_prev &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[9b]"></a>pwd_char_hider_anim</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.pwd_char_hider_anim))
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
</UL>
<P><STRONG><a name="[6f]"></a>lv_anim_path_step</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_anim_path_step))
<BR>[Address Reference Count : 7]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_event)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
<LI> lto-llvm-6a46d2.o(.text.label_event_cb)
</UL>
<P><STRONG><a name="[9c]"></a>pwd_char_hider_anim_ready</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.pwd_char_hider_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = pwd_char_hider_anim_ready &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinbox_updatevalue)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_char)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_add_text)
</UL>
<P><STRONG><a name="[25a]"></a>pwd_char_hider</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.pwd_char_hider))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider_anim_ready
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[dd]"></a>lv_spinner_constructor</STRONG> (Thumb, 306 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_spinner_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = lv_spinner_constructor &rArr; value_update &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[9d]"></a>arc_anim_end_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.arc_anim_end_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = arc_anim_end_angle &rArr; lv_arc_set_end_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
</UL>
<P><STRONG><a name="[9e]"></a>lv_anim_path_ease_in_out</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_anim_path_ease_in_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_anim_path_ease_in_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
</UL>
<P><STRONG><a name="[9f]"></a>arc_anim_start_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.arc_anim_start_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = arc_anim_start_angle &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_spinner_constructor)
</UL>
<P><STRONG><a name="[1e9]"></a>inv_arc_area</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.inv_arc_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
</UL>

<P><STRONG><a name="[1f5]"></a>value_update</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.value_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = value_update &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
</UL>

<P><STRONG><a name="[1ae]"></a>lv_arc_set_end_angle</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_arc_set_end_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lv_arc_set_end_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_knob_area
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_anim_end_angle
</UL>

<P><STRONG><a name="[1af]"></a>lv_arc_set_start_angle</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_arc_set_start_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_knob_area
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_anim_start_angle
</UL>

<P><STRONG><a name="[de]"></a>lv_tabview_constructor</STRONG> (Thumb, 804 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_tabview_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = lv_tabview_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1fa]"></a>make_one_button_checked</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.make_one_button_checked))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = make_one_button_checked &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[a2]"></a>btns_value_changed_event_cb</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.btns_value_changed_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = btns_value_changed_event_cb &rArr; lv_tabview_set_act &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_tabview_constructor)
</UL>
<P><STRONG><a name="[a3]"></a>cont_scroll_end_event_cb</STRONG> (Thumb, 526 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.cont_scroll_end_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = cont_scroll_end_event_cb &rArr; lv_tabview_set_act &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_tabview_constructor)
</UL>
<P><STRONG><a name="[df]"></a>lv_tabview_destructor</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_tabview_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = lv_tabview_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e0]"></a>lv_tabview_event</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_tabview_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = lv_tabview_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1b5]"></a>lv_tabview_set_act</STRONG> (Thumb, 500 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_tabview_set_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = lv_tabview_set_act &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btns_value_changed_event_cb
</UL>

<P><STRONG><a name="[e1]"></a>lv_tileview_constructor</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_tileview_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = lv_tileview_constructor &rArr; lv_obj_set_size &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[a6]"></a>tileview_event_cb</STRONG> (Thumb, 732 bytes, Stack size 80 bytes, lto-llvm-6a46d2.o(.text.tileview_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = tileview_event_cb &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_tileview_constructor)
</UL>
<P><STRONG><a name="[e2]"></a>lv_tileview_tile_constructor</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_tileview_tile_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = lv_tileview_tile_constructor &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e3]"></a>lv_win_constructor</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_win_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = lv_win_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e4]"></a>lv_keyboard_constructor</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_keyboard_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = lv_keyboard_constructor &rArr; lv_keyboard_update_ctrl_map &rArr; lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[87]"></a>lv_keyboard_def_event_cb</STRONG> (Thumb, 688 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_keyboard_def_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = lv_keyboard_def_event_cb &rArr; lv_textarea_add_text &rArr; lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_update_ctrl_map
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_keyboard_constructor)
</UL>
<P><STRONG><a name="[225]"></a>lv_keyboard_update_ctrl_map</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_keyboard_update_ctrl_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = lv_keyboard_update_ctrl_map &rArr; lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
</UL>

<P><STRONG><a name="[226]"></a>lv_textarea_add_text</STRONG> (Thumb, 526 bytes, Stack size 104 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_add_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = lv_textarea_add_text &rArr; lv_textarea_add_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
</UL>

<P><STRONG><a name="[229]"></a>lv_textarea_del_char</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_del_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = lv_textarea_del_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[22b]"></a>lv_font_get_glyph_width</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_font_get_glyph_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_font_get_glyph_width
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[111]"></a>lv_font_get_bitmap_fmt_txt</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_font_get_bitmap_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_font_get_bitmap_fmt_txt &rArr; get_glyph_dsc_id
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[21e]"></a>get_glyph_dsc_id</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, lto-llvm-6a46d2.o(.text.get_glyph_dsc_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_glyph_dsc_id
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[110]"></a>lv_font_get_glyph_dsc_fmt_txt</STRONG> (Thumb, 432 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_font_get_glyph_dsc_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_font_get_glyph_dsc_fmt_txt &rArr; get_glyph_dsc_id
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1f1]"></a>lv_anim_init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_anim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_anim_init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[232]"></a>lv_tlsf_realloc</STRONG> (Thumb, 490 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_tlsf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[8a]"></a>_out_buffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._out_buffer))
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_snprintf)
<LI> lto-llvm-6a46d2.o(.text.lv_label_set_text_fmt)
</UL>
<P><STRONG><a name="[1ac]"></a>_vsnprintf</STRONG> (Thumb, 2534 bytes, Stack size 128 bytes, lto-llvm-6a46d2.o(.text._vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + In Cycle
<LI>Call Chain = _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
</UL>

<P><STRONG><a name="[65]"></a>_out_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text._out_null))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text._vsnprintf)
</UL>
<P><STRONG><a name="[1aa]"></a>_ntoa_format</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text._ntoa_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _ntoa_format &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[264]"></a>lv_tlsf_malloc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_tlsf_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_tlsf_malloc &rArr; block_prepare_used
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>

<P><STRONG><a name="[263]"></a>block_merge_next</STRONG> (Thumb, 190 bytes, Stack size 20 bytes, lto-llvm-6a46d2.o(.text.block_merge_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = block_merge_next
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>

<P><STRONG><a name="[22d]"></a>lv_txt_utf8_prev</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_txt_utf8_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_txt_utf8_prev &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[230]"></a>lv_txt_utf8_get_byte_id</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_txt_utf8_get_byte_id))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[1a9]"></a>_lv_txt_ins</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text._lv_txt_ins))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _lv_txt_ins &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
</UL>

<P><STRONG><a name="[1a6]"></a>_lv_txt_cut</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text._lv_txt_cut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_txt_cut &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
</UL>

<P><STRONG><a name="[e5]"></a>lv_arc_constructor</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_arc_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = lv_arc_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e6]"></a>lv_arc_event</STRONG> (Thumb, 1456 bytes, Stack size 240 bytes, lto-llvm-6a46d2.o(.text.lv_arc_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = lv_arc_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_knob_area
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1e0]"></a>get_center</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.get_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_center &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[1e1]"></a>get_knob_area</STRONG> (Thumb, 488 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.get_knob_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = get_knob_area &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>

<P><STRONG><a name="[ff]"></a>lv_bar_constructor</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_bar_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_bar_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[100]"></a>lv_bar_destructor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_bar_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lv_bar_destructor &rArr; lv_anim_del &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[101]"></a>lv_bar_event</STRONG> (Thumb, 2284 bytes, Stack size 328 bytes, lto-llvm-6a46d2.o(.text.lv_bar_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = lv_bar_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[70]"></a>lv_area_get_width.992</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_get_width.992))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_bar_event)
</UL>
<P><STRONG><a name="[71]"></a>lv_area_get_height.993</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_area_get_height.993))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_bar_event)
</UL>
<P><STRONG><a name="[72]"></a>lv_bar_anim</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_bar_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_bar_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_bar_set_value)
<LI> lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
</UL>
<P><STRONG><a name="[73]"></a>lv_bar_anim_ready</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_bar_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_bar_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_bar_set_value)
<LI> lto-llvm-6a46d2.o(.text.lv_bar_set_start_value)
</UL>
<P><STRONG><a name="[1f7]"></a>lv_bar_set_start_value</STRONG> (Thumb, 160 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_bar_set_start_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = lv_bar_set_start_value &rArr; lv_anim_start &rArr; lv_anim_del &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[e7]"></a>lv_btn_constructor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_btn_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_btn_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e8]"></a>lv_btnmatrix_constructor</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_btnmatrix_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = lv_btnmatrix_constructor &rArr; lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[e9]"></a>lv_btnmatrix_destructor</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_btnmatrix_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_btnmatrix_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[ea]"></a>lv_btnmatrix_event</STRONG> (Thumb, 1756 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_btnmatrix_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = lv_btnmatrix_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1df]"></a>get_button_from_point</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.get_button_from_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = get_button_from_point &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[1cd]"></a>draw_main</STRONG> (Thumb, 1264 bytes, Stack size 376 bytes, lto-llvm-6a46d2.o(.text.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[eb]"></a>lv_checkbox_constructor</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_checkbox_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_checkbox_constructor &rArr; lv_obj_add_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[ec]"></a>lv_checkbox_destructor</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_checkbox_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_checkbox_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[ed]"></a>lv_checkbox_event</STRONG> (Thumb, 1334 bytes, Stack size 264 bytes, lto-llvm-6a46d2.o(.text.lv_checkbox_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144 + Unknown Stack Size
<LI>Call Chain = lv_checkbox_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[ee]"></a>lv_dropdown_constructor</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[ef]"></a>lv_dropdown_destructor</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_destructor &rArr; lv_obj_del &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f0]"></a>lv_dropdown_event</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1036
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1d0]"></a>draw_main.1036</STRONG> (Thumb, 1052 bytes, Stack size 144 bytes, lto-llvm-6a46d2.o(.text.draw_main.1036))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = draw_main.1036 &rArr; lv_draw_img &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[216]"></a>position_to_selected</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.position_to_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = position_to_selected &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[1b4]"></a>lv_dropdown_open</STRONG> (Thumb, 2148 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_open &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[1b0]"></a>btn_release_handler</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, lto-llvm-6a46d2.o(.text.btn_release_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 784 + Unknown Stack Size
<LI>Call Chain = btn_release_handler &rArr; lv_dropdown_open &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[214]"></a>lv_dropdown_close</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_close &rArr; lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[f1]"></a>lv_dropdownlist_constructor</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_dropdownlist_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = lv_dropdownlist_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f2]"></a>lv_dropdownlist_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_dropdownlist_destructor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f3]"></a>lv_dropdown_list_event</STRONG> (Thumb, 466 bytes, Stack size 72 bytes, lto-llvm-6a46d2.o(.text.lv_dropdown_list_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_list_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1c8]"></a>draw_box</STRONG> (Thumb, 262 bytes, Stack size 104 bytes, lto-llvm-6a46d2.o(.text.draw_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = draw_box &rArr; lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[1ca]"></a>draw_box_label</STRONG> (Thumb, 308 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.draw_box_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = draw_box_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[f4]"></a>lv_img_constructor</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_img_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_img_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f5]"></a>lv_img_destructor</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_img_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_img_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f6]"></a>lv_img_event</STRONG> (Thumb, 1938 bytes, Stack size 160 bytes, lto-llvm-6a46d2.o(.text.lv_img_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040 + Unknown Stack Size
<LI>Call Chain = lv_img_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[fb]"></a>lv_label_constructor</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_label_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = lv_label_constructor &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[fc]"></a>lv_label_destructor</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_label_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_label_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[fd]"></a>lv_label_event</STRONG> (Thumb, 1882 bytes, Stack size 120 bytes, lto-llvm-6a46d2.o(.text.lv_label_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = lv_label_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[88]"></a>set_ofs_x_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.set_ofs_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = set_ofs_x_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_label_refr_text)
<LI> lto-llvm-6a46d2.o(.text.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[89]"></a>set_ofs_y_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.set_ofs_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = set_ofs_y_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_label_refr_text)
<LI> lto-llvm-6a46d2.o(.text.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[22c]"></a>lv_label_get_letter_on</STRONG> (Thumb, 1184 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_label_get_letter_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
</UL>

<P><STRONG><a name="[231]"></a>lv_label_set_dot_tmp</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_label_set_dot_tmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_label_set_dot_tmp &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[22e]"></a>lv_label_get_letter_pos</STRONG> (Thumb, 726 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_label_get_letter_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = lv_label_get_letter_pos &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>

<P><STRONG><a name="[22f]"></a>lv_label_ins_text</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.lv_label_ins_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = lv_label_ins_text &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
</UL>

<P><STRONG><a name="[f7]"></a>lv_line_constructor</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_line_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_line_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f8]"></a>lv_line_event</STRONG> (Thumb, 680 bytes, Stack size 64 bytes, lto-llvm-6a46d2.o(.text.lv_line_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = lv_line_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[f9]"></a>lv_roller_constructor</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_roller_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = lv_roller_constructor &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[fa]"></a>lv_roller_event</STRONG> (Thumb, 1484 bytes, Stack size 136 bytes, lto-llvm-6a46d2.o(.text.lv_roller_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = lv_roller_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[253]"></a>refr_position</STRONG> (Thumb, 532 bytes, Stack size 104 bytes, lto-llvm-6a46d2.o(.text.refr_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[254]"></a>lv_roller_set_selected</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_roller_set_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = lv_roller_set_selected &rArr; refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[96]"></a>set_y_anim.1076</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.set_y_anim.1076))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = set_y_anim.1076 &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-6a46d2.o(.text.lv_roller_event)
<LI> lto-llvm-6a46d2.o(.text.refr_position)
</UL>
<P><STRONG><a name="[1e7]"></a>inf_normalize</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.inf_normalize))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb.1077
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[c1]"></a>scroll_anim_ready_cb.1077</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.scroll_anim_ready_cb.1077))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = scroll_anim_ready_cb.1077 &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.refr_position)
</UL>
<P><STRONG><a name="[fe]"></a>lv_roller_label_event</STRONG> (Thumb, 830 bytes, Stack size 104 bytes, lto-llvm-6a46d2.o(.text.lv_roller_label_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = lv_roller_label_event &rArr; lv_label_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[102]"></a>lv_slider_constructor</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_slider_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = lv_slider_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[103]"></a>lv_slider_event</STRONG> (Thumb, 1944 bytes, Stack size 272 bytes, lto-llvm-6a46d2.o(.text.lv_slider_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = lv_slider_event &rArr; lv_bar_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[257]"></a>position_knob</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.position_knob))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = position_knob &rArr; lv_obj_get_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[104]"></a>lv_switch_constructor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.lv_switch_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_switch_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[105]"></a>lv_switch_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_switch_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_switch_destructor &rArr; lv_anim_del &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[106]"></a>lv_switch_event</STRONG> (Thumb, 874 bytes, Stack size 184 bytes, lto-llvm-6a46d2.o(.text.lv_switch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = lv_switch_event &rArr; lv_obj_event &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[a0]"></a>lv_switch_anim_exec_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_switch_anim_exec_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_switch_anim_exec_cb &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_switch_event)
</UL>
<P><STRONG><a name="[a1]"></a>lv_switch_anim_ready</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-6a46d2.o(.text.lv_switch_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_switch_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_switch_event)
</UL>
<P><STRONG><a name="[107]"></a>lv_table_constructor</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_table_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_table_constructor &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[108]"></a>lv_table_destructor</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.lv_table_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_table_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[109]"></a>lv_table_event</STRONG> (Thumb, 1206 bytes, Stack size 112 bytes, lto-llvm-6a46d2.o(.text.lv_table_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1004 + Unknown Stack Size
<LI>Call Chain = lv_table_event &rArr; draw_main.1085 &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_to_selected_cell
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main.1085
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[1d2]"></a>draw_main.1085</STRONG> (Thumb, 2020 bytes, Stack size 456 bytes, lto-llvm-6a46d2.o(.text.draw_main.1085))
<BR><BR>[Stack]<UL><LI>Max Depth = 892 + Unknown Stack Size
<LI>Call Chain = draw_main.1085 &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[25c]"></a>scroll_to_selected_cell</STRONG> (Thumb, 466 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.scroll_to_selected_cell))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = scroll_to_selected_cell &rArr; lv_obj_scroll_by_bounded &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[10d]"></a>lv_textarea_constructor</STRONG> (Thumb, 360 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = lv_textarea_constructor &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[a4]"></a>label_event_cb</STRONG> (Thumb, 156 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.label_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = label_event_cb &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
</UL>
<P><STRONG><a name="[6e]"></a>cursor_blink_anim_cb</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.cursor_blink_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = cursor_blink_anim_cb &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>
<BR>[Address Reference Count : 4]<UL><LI> lto-llvm-6a46d2.o(.text.lv_textarea_constructor)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_event)
<LI> lto-llvm-6a46d2.o(.text.lv_textarea_set_cursor_pos)
<LI> lto-llvm-6a46d2.o(.text.label_event_cb)
</UL>
<P><STRONG><a name="[10e]"></a>lv_textarea_destructor</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_textarea_destructor &rArr; lv_tlsf_free &rArr; block_merge_next
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.rodata)
</UL>
<P><STRONG><a name="[25f]"></a>lv_textarea_del_char_forward</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_del_char_forward))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = lv_textarea_del_char_forward &rArr; lv_textarea_del_char &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[25e]"></a>lv_textarea_cursor_up</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_cursor_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = lv_textarea_cursor_up &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[25d]"></a>lv_textarea_cursor_down</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.lv_textarea_cursor_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = lv_textarea_cursor_down &rArr; lv_textarea_set_cursor_pos &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[1ee]"></a>refr_cursor_area</STRONG> (Thumb, 868 bytes, Stack size 88 bytes, lto-llvm-6a46d2.o(.text.refr_cursor_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = refr_cursor_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>

<P><STRONG><a name="[c4]"></a>lapTimer_cb</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.lapTimer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = lapTimer_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_transformed_area &rArr; lv_obj_transform_point &rArr;  lv_obj_transform_point (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.ui_event_startup)
</UL>
<P><STRONG><a name="[26e]"></a>xTaskResumeAll</STRONG> (Thumb, 642 bytes, Stack size 40 bytes, lto-llvm-6a46d2.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>

<P><STRONG><a name="[271]"></a>prvUnlockQueue</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, lto-llvm-6a46d2.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[273]"></a>xTaskPriorityInherit</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, lto-llvm-6a46d2.o(.text.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[274]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 462 bytes, Stack size 20 bytes, lto-llvm-6a46d2.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vTaskPlaceOnEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[26f]"></a>xTaskCreateStatic</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lto-llvm-6a46d2.o(.text.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[c0]"></a>prvTaskExitError</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, lto-llvm-6a46d2.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-6a46d2.o(.text.prvInitialiseNewTask)
</UL>
<P><STRONG><a name="[191]"></a>xTaskIncrementTick</STRONG> (Thumb, 434 bytes, Stack size 36 bytes, lto-llvm-6a46d2.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[270]"></a>vPortFree</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, lto-llvm-6a46d2.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
